///////////////////////////////////////////////////////////////////////
//	File	:	"CObjectManager.h"
//
//	Author	:	Keith Morgado
//
//	Purpose	:	Manages all in-game objects for our application.
///////////////////////////////////////////////////////////////////////

#pragma once

#include <vector>
using std::vector;

#include "CBase.h"
#include "CSGD_Dispatcher.h"
#include "CSGD_MessageSystem.h"
#include "Stats.h"

#ifndef SAFE_RELEASE
#define SAFE_RELEASE(p)	if (p) { p->Release(); p = 0; }
#endif

#define SLOW .5
#define FAST 2

class CSGD_ObjectManager
{
	private:
		vector<CBase *>		m_vObjects;
		static CSGD_ObjectManager *m_pInstance;

		CSGD_ObjectManager();
		CSGD_ObjectManager(const CSGD_ObjectManager &ref);
		CSGD_ObjectManager &operator = (const CSGD_ObjectManager &ref);
	public:
		~CSGD_ObjectManager();

		static CSGD_ObjectManager* GetInstance(void);

		void DeleteInstance(void);

		void CheckCollision(void);

		//////////////////////////////////////////////////////////////////////////////////////////////////////
		// Function: AddObject
		//
		//  Purpose: This adds an object to be managed.
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		void AddObject(CBase *pObj);

		//////////////////////////////////////////////////////////////////////////////////////////////////////
		// Function: RemoveObject
		//
		//  Purpose: Remove an object from being managed.
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		void RemoveObject(CBase *pObj);

		//////////////////////////////////////////////////////////////////////////////////////////////////////
		// Function: RemoveAllObjects
		//
		//  Purpose: Remove all of the objects currently being managed.
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		void RemoveAllObjects(void);

		//////////////////////////////////////////////////////////////////////////////////////////////////////
		// Function: UpdateObjects
		//
		//  Purpose: Updates all the objects being managed.
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		void UpdateObjects(double dElapsedTime);

		//////////////////////////////////////////////////////////////////////////////////////////////////////
		// Function: RenderObjects
		//
		//  Purpose: Render all of the objects being managed.
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		void RenderObjects(void);

		//////////////////////////////////////////////////////////////////////////////////////////////////////
		// Function: PrintMyMap
		//
		//  Purpose: Prints my MiniMap
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		void PrintMyMap(void);
};